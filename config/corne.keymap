/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ZBT_SEL_1: ZBT_SEL_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "ZBT_SEL_1";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1>, <&bt BT_CLR_ALL>;

            tapping-term-ms = <125>;
        };

        ZLAYER1: ZLAYER1 {
            compatible = "zmk,behavior-tap-dance";
            label = "ZLAYER1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&tog 2>;

            tapping-term-ms = <150>;
        };

        ZKP_BCKSPC: ZKP_BCKSPC {
            compatible = "zmk,behavior-tap-dance";
            label = "ZKP_BCKSPC";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;

            tapping-term-ms = <200>;
        };

        ZKP_L_ARROW: ZKP_L_ARROW {
            compatible = "zmk,behavior-tap-dance";
            label = "ZKP_L_ARROW";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ARROW>, <&kp LC(LS(LEFT_ARROW))>;

            tapping-term-ms = <200>;
        };

        ZKP_PARENS: ZKP_PARENS {
            compatible = "zmk,behavior-tap-dance";
            label = "ZKP_PARENS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&ZKM_PARENS>;

            tapping-term-ms = <200>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-mod-morph";
            label = "NEW_BEHAVIOR";
            bindings = <&kp N9>, <&kp NUMBER_9>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
    };

    macros {
        ZKM_PARENS: ZKM_PARENS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "ZKM_PARENS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB | |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB        &kp TAB    &kp Q  &kp W          &kp E     &kp R    &kp T      &kp Y    &kp U          &kp I      &kp O    &kp P
&ZKP_BCKSPC    &kp LCTRL  &kp A  &kp S          &kp D     &kp F    &kp G      &kp H    &kp J          &kp K      &kp L    &kp C_MUTE
&kp C_AL_CALC  &kp LSHFT  &kp Z  &kp X          &kp C     &kp V    &kp B      &kp N    &kp M          &kp COMMA  &kp DOT  &kp K_LOCK
                                 &mt ESC LC(C)  &kp LGUI  &mo 1    &kp SPACE  &kp RET  &kp LC(LS(V))
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR     &kp PRCNT       &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans       &trans          &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &ZKM_PARENS  &ZKP_L_ARROW    &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans       &kp SPACE       &kp RET    &trans     &kp RALT
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
